generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "./dbml/schema.dbml"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  userId String? @unique
  name  String
  city  String @default("unknown")
  email String @unique
  password String 
  role String @default("user")
}

model Category {
  categoryId String               @id
  name       String               @unique
  products   Product[]
  attributes CategoryAttribute[]
}

model CategoryAttribute {
  attributeId String               @id
  categoryId  String
  name        String               // e.g. color, RAM, speed
  type        String               // e.g. string, number, select
  category    Category             @relation(fields: [categoryId], references: [categoryId])
  values      ProductAttributeValue[]
}

model Product {
  productId   String               @id
  title       String
  description String
  categoryId  String
  category    Category             @relation(fields: [categoryId], references: [categoryId])
  images      ProductImage[]
  prices      ProductPrice[]
  attributes  ProductAttributeValue[]
  stock       ProductStock?
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

model ProductImage {
  imageId   String   @id
  url       String
  alt       String?
  productId String
  product   Product  @relation(fields: [productId], references: [productId])
}

model ProductPrice {
  priceId    String   @id
  productId  String
  product    Product  @relation(fields: [productId], references: [productId])
  price      Int      
  discount   Int?     // percentage (0-100)
  currency   String   @default("USD")
  startsAt   DateTime?
  endsAt     DateTime?
  createdAt  DateTime @default(now())
}

model ProductStock {
  stockId    String   @id
  productId  String   @unique
  product    Product  @relation(fields: [productId], references: [productId])
  quantity   Int
  warehouse  String   @default("default")
  updatedAt  DateTime @updatedAt
}

model ProductAttributeValue {
  valueId     String              @id
  productId   String
  attributeId String
  value       String
  product     Product             @relation(fields: [productId], references: [productId])
  attribute   CategoryAttribute   @relation(fields: [attributeId], references: [attributeId])
}
